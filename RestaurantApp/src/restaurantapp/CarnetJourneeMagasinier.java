/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurantapp;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Dimension;
import java.awt.Toolkit;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.GrayColor;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.GregorianCalendar;
import java.awt.Dimension;
import java.awt.Toolkit;

/**
 *
 * @author aarab
 */
public class CarnetJourneeMagasinier extends javax.swing.JFrame {
    Connection conn=null;
    ResultSet rs1=null;
    ResultSet rs2=null;
    ResultSet rs3=null;
    PreparedStatement pst1=null; 
    PreparedStatement pst2=null; 
    PreparedStatement pst3=null;
    String dateRepas ;
    /**
     * Creates new form CarnetJourneeMagasinier
     */
    public CarnetJourneeMagasinier() {
        initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size=toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        conn=db.java_db();
    }
    
    public void setDateRepas( String date ){
        dateRepas = date;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(null);

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\aarab\\Documents\\NetBeansProjects\\RestaurantApp\\src\\restaurantapp\\images\\Icon-RETOUR.png")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(420, 160, 170, 70);

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\aarab\\Documents\\NetBeansProjects\\RestaurantApp\\src\\restaurantapp\\images\\print-icon.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(150, 160, 170, 70);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Voulez vous imprimer ?");
        jPanel3.add(jLabel1);
        jLabel1.setBounds(240, 90, 280, 29);

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\aarab\\Documents\\NetBeansProjects\\RestaurantApp\\src\\restaurantapp\\images\\pjazza_italian_restaurant_background.png")); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(0, 0, 870, 330);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser dialog = new JFileChooser();
            dialog.setSelectedFile(new File("Statistique_Report.pdf"));
            int dialogResult = dialog.showSaveDialog(null);
            if (dialogResult==JFileChooser.APPROVE_OPTION){
            String filePath = dialog.getSelectedFile().getPath();
           
        try {
            // TODO add your handling code here:   
           Document myDocument = new Document();
           PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath ));
           PdfPTable table1 = new PdfPTable(4);
           PdfPTable table2 = new PdfPTable(4);
           PdfPTable table3 = new PdfPTable(4);
           PdfPTable table4 = new PdfPTable(10);
           myDocument.open();
           
   
           float[] columnWidths = new float[] {9,9,9,9};
           table1.setWidths(columnWidths);

           table1.setWidthPercentage(100); //set table width to 100%
           
           String sql1 ="select EFFECTIF_PREVU_REPAS_ETUDIANT, EFFECTIF_PREVU_REPAS_MAITRE, EFFECTIF_PREVU_REPAS_AGENT, EFFECTIF_IMPREVU_REPAS\n" +
"                        from repas r\n" +
"                        JOIN MENU m\n" +
"                        ON r.ID_MENU = m.ID_MENU\n" +
"                        where r.date_repas= ? AND type_repas_menu='petit_dejeuner'";
           pst1=conn.prepareStatement(sql1);
           pst1.setString(1, dateRepas);
           System.out.println(pst1);
           rs1=pst1.executeQuery();
           
          myDocument.add(new Paragraph("Carnet du magasinié, journée de : " + dateRepas, FontFactory.getFont(FontFactory.TIMES_ROMAN,30,Font.BOLD)));;
          myDocument.add(new Paragraph("Effectif des personnes prévues (Petit_déjeuner) :\n",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
          myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n"));
          table1.addCell(new PdfPCell(new Paragraph("Effectif prévu étudiant",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table1.addCell(new PdfPCell(new Paragraph("Effectif prévu maître",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table1.addCell(new PdfPCell(new Paragraph("Effectif prévu agent",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table1.addCell(new PdfPCell(new Paragraph("Effectif imprévu",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));                 
          while(rs1.next()){

           table1.addCell(new PdfPCell(new Paragraph(rs1.getString(1),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table1.addCell(new PdfPCell(new Paragraph(rs1.getString(2),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table1.addCell(new PdfPCell(new Paragraph(rs1.getString(3),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table1.addCell(new PdfPCell(new Paragraph(rs1.getString(4),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
          }
           myDocument.add(table1);
           myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n\n"));
           
           
           
           table2.setWidths(columnWidths);
           table2.setWidthPercentage(100);
          
          String sql2 ="select EFFECTIF_PREVU_REPAS_ETUDIANT, EFFECTIF_PREVU_REPAS_MAITRE, EFFECTIF_PREVU_REPAS_AGENT, EFFECTIF_IMPREVU_REPAS\n" +
"                        from repas r\n" +
"                        JOIN MENU m\n" +
"                        ON r.ID_MENU = m.ID_MENU\n" +
"                        where r.date_repas = ? AND type_repas_menu='dejeuner'";
           pst2=conn.prepareStatement(sql2);
           pst2.setString(1, dateRepas);
           rs2=pst2.executeQuery();         
          
          myDocument.add(new Paragraph("Effectif des personnes prévues (Déjeuner) : ",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
          myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n"));
          table2.addCell(new PdfPCell(new Paragraph("Effectif prévu étudiant",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table2.addCell(new PdfPCell(new Paragraph("Effectif prévu maître",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table2.addCell(new PdfPCell(new Paragraph("Effectif prévu agent",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table2.addCell(new PdfPCell(new Paragraph("Effectif imprévu",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));

          while(rs2.next()){

           table2.addCell(new PdfPCell(new Paragraph(rs2.getString(1),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table2.addCell(new PdfPCell(new Paragraph(rs2.getString(2),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table2.addCell(new PdfPCell(new Paragraph(rs2.getString(3),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table2.addCell(new PdfPCell(new Paragraph(rs2.getString(4),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
          }      
           myDocument.add(table2);
           myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n\n"));
           
           
           table3.setWidths(columnWidths);
           table3.setWidthPercentage(100);
            String sql3 ="select EFFECTIF_PREVU_REPAS_ETUDIANT, EFFECTIF_PREVU_REPAS_MAITRE, EFFECTIF_PREVU_REPAS_AGENT, EFFECTIF_IMPREVU_REPAS\n" +
"                        from repas r\n" +
"                        JOIN MENU m\n" +
"                        ON r.ID_MENU = m.ID_MENU\n" +
"                        where r.date_repas= ? AND type_repas_menu='diner'";
           pst3=conn.prepareStatement(sql3);
           pst3.setString(1, dateRepas);
           rs3=pst3.executeQuery();
           
          
          myDocument.add(new Paragraph("Effectif des personnes prévues (Dîner) : ",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
          myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n"));
          table3.addCell(new PdfPCell(new Paragraph("Effectif prévu étudiant",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table3.addCell(new PdfPCell(new Paragraph("Effectif prévu maître",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table3.addCell(new PdfPCell(new Paragraph("Effectif prévu agent",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table3.addCell(new PdfPCell(new Paragraph("Effectif imprévu",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));

          while(rs3.next()){

           table3.addCell(new PdfPCell(new Paragraph(rs3.getString(1),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table3.addCell(new PdfPCell(new Paragraph(rs3.getString(2),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table3.addCell(new PdfPCell(new Paragraph(rs3.getString(3),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table3.addCell(new PdfPCell(new Paragraph(rs3.getString(4),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
          }    
           
           myDocument.add(table3);
           myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------"));
           
           
           float[] columnWidths1 = new float[] {15,15,15,15,15,15,15,15,15,15} ;
           
           table4.setWidths(columnWidths1);

           table4.setWidthPercentage(100); //set table width to 100%
           
           String sql11 ="SELECT J1.designation_article, J2.unite_mesure_article , petit_dejeuner , dejeuner , diner , NVL(total_entree,0) as total_entree ,\n" +
                    "        petit_dejeuner_sortie , dejeuner_sortie , diner_sortie , NVL(total_sortie_article,0) as total_sortie_article \n" +
                    "\n" +
                    "FROM\n" +
                    "(    \n" +
                    "    SELECT O1.designation_article , petit_dejeuner as petit_dejeuner_sortie , dejeuner as dejeuner_sortie , diner as diner_sortie , ( NVL(O2.quantite_sortie_par_type_repas,0) + NVL(O1.total_quantite_sortie_deux,0) ) as total_sortie_article FROM\n" +
                    "    (    \n" +
                    "        SELECT Z1.designation_article , petit_dejeuner , dejeuner , (NVL(Z1.quantite_sortie_par_type_repas,0) + NVL(Z2.quantite_sortie_par_type_repas,0)) as  total_quantite_sortie_deux FROM\n" +
                    "        (    \n" +
                    "            SELECT designation_article , (select (NVL(effectif_prevu_repas_etudiant,0) + NVL(effectif_prevu_repas_agent,0) + NVL(effectif_prevu_repas_maitre,0) + NVL(effectif_imprevu_repas,0) ) as somme_effectifs FROM\n" +
                    "            repas r JOIN menu m ON r.id_menu = m.id_menu WHERE r.date_repas = ? AND m.type_repas_menu = 'petit_dejeuner')*sum(quantite_article_plat) as quantite_sortie_par_type_repas , type_repas_menu as petit_dejeuner FROM\n" +
                    "            (\n" +
                    "                (\n" +
                    "                    SELECT id_plat , type_repas_menu FROM\n" +
                    "                    (\n" +
                    "                        SELECT m.id_menu , type_repas_menu FROM\n" +
                    "                        repas rep JOIN menu m ON rep.id_menu = m.id_menu\n" +
                    "                        WHERE date_repas = ? AND type_repas_menu = 'petit_dejeuner'\n" +
                    "                    )R\n" +
                    "                    JOIN composition cmp ON R.id_menu = cmp.id_menu\n" +
                    "                )H\n" +
                    "                JOIN\n" +
                    "                (\n" +
                    "                    SELECT designation_article , NVL(quantite_article_plat,0) as quantite_article_plat  , id_plat FROM\n" +
                    "                    article art JOIN liste_articles_du_plat lap ON art.id_article = lap.id_article\n" +
                    "                )V\n" +
                    "                ON H.id_plat = V.id_plat\n" +
                    "            )\n" +
                    "            group by designation_article,type_repas_menu\n" +
                    "        )Z1\n" +
                    "        FULL OUTER JOIN\n" +
                    "        (\n" +
                    "            SELECT designation_article , (select (NVL(effectif_prevu_repas_etudiant,0) + NVL(effectif_prevu_repas_agent,0) + NVL(effectif_prevu_repas_maitre,0) + NVL(effectif_imprevu_repas,0) ) as somme_effectifs FROM\n" +
                    "            repas r JOIN menu m ON r.id_menu = m.id_menu WHERE r.date_repas = ? AND m.type_repas_menu = 'dejeuner')*sum(quantite_article_plat) as quantite_sortie_par_type_repas , type_repas_menu as dejeuner FROM\n" +
                    "            (\n" +
                    "                (\n" +
                    "                    SELECT id_plat , type_repas_menu FROM\n" +
                    "                    (\n" +
                    "                        SELECT m.id_menu , type_repas_menu FROM\n" +
                    "                        repas rep JOIN menu m ON rep.id_menu = m.id_menu\n" +
                    "                        WHERE date_repas = ? AND type_repas_menu = 'dejeuner'\n" +
                    "                    )R\n" +
                    "                    JOIN composition cmp ON R.id_menu = cmp.id_menu\n" +
                    "                )H\n" +
                    "                JOIN\n" +
                    "                (\n" +
                    "                    SELECT designation_article , NVL(quantite_article_plat,0) as quantite_article_plat  , id_plat FROM\n" +
                    "                    article art JOIN liste_articles_du_plat lap ON art.id_article = lap.id_article\n" +
                    "                )V\n" +
                    "                ON H.id_plat = V.id_plat\n" +
                    "            )\n" +
                    "            group by designation_article,type_repas_menu\n" +
                    "        )Z2\n" +
                    "        ON Z1.designation_article=Z2.designation_article\n" +
                    "    )O1\n" +
                    "    FULL OUTER JOIN \n" +
                    "    (\n" +
                    "        SELECT designation_article , (select (NVL(effectif_prevu_repas_etudiant,0) + NVL(effectif_prevu_repas_agent,0) + NVL(effectif_prevu_repas_maitre,0) + NVL(effectif_imprevu_repas,0) ) as somme_effectifs FROM\n" +
                    "            repas r JOIN menu m ON r.id_menu = m.id_menu WHERE r.date_repas = ? AND m.type_repas_menu = 'diner')*sum(quantite_article_plat) as quantite_sortie_par_type_repas , type_repas_menu as diner FROM\n" +
                    "            (\n" +
                    "                (\n" +
                    "                    SELECT id_plat , type_repas_menu FROM\n" +
                    "                    (\n" +
                    "                        SELECT m.id_menu , type_repas_menu FROM\n" +
                    "                        repas rep JOIN menu m ON rep.id_menu = m.id_menu\n" +
                    "                        WHERE date_repas = ? AND type_repas_menu = 'diner'\n" +
                    "                    )R\n" +
                    "                    JOIN composition cmp ON R.id_menu = cmp.id_menu\n" +
                    "                )H\n" +
                    "                JOIN\n" +
                    "                (\n" +
                    "                    SELECT designation_article , NVL(quantite_article_plat,0) as quantite_article_plat  , id_plat FROM\n" +
                    "                    article art JOIN liste_articles_du_plat lap ON art.id_article = lap.id_article\n" +
                    "                )V\n" +
                    "                ON H.id_plat = V.id_plat\n" +
                    "            )\n" +
                    "            group by designation_article,type_repas_menu\n" +
                    "    )O2\n" +
                    "    ON O1.designation_article = O2.designation_article\n" +
                    ")J1\n" +
                    "FULL OUTER JOIN\n" +
                    "(\n" +
                    "    SELECT tt.designation_article, tt.unite_mesure_article ,petit_dejeuner , dejeuner , diner , ( NVL(YY.quantite_entree,0) + TT.total_quantite_entree ) as total_entree FROM \n" +
                    "	(    \n" +
                    "	    SELECT RR.designation_article , RR.unite_mesure_article ,RR.date_commande , petit_dejeuner , dejeuner , ( NVL(RR.quantite_entree,0) + NVL(KK.quantite_entree,0) ) as total_quantite_entree FROM\n" +
                    "	    (\n" +
                    "	        SELECT designation_article , unite_mesure_article , date_commande , type_repas_commande as petit_dejeuner , quantite_entree FROM \n" +
                    "	        (\n" +
                    "	            (\n" +
                    "	                SELECT date_commande , type_repas_commande , quantite_entree , id_article FROM \n" +
                    "	                (\n" +
                    "	                    commande cd JOIN articles_commandes acm ON cd.id_commande=acm.id_commande\n" +
                    "	                )\n" +
                    "	            )R JOIN article art ON R.id_article = art.id_article \n" +
                    "	        )\n" +
                    "	        where date_commande = ? AND type_repas_commande = 'petit_dejeuner'\n" +
                    "	    ) RR\n" +
                    "	    FULL OUTER JOIN \n" +
                    "	    (\n" +
                    "	        SELECT designation_article , date_commande , type_repas_commande as dejeuner , quantite_entree FROM \n" +
                    "	        (\n" +
                    "	            (\n" +
                    "	                SELECT date_commande , type_repas_commande , quantite_entree , id_article FROM \n" +
                    "	                (\n" +
                    "	                    commande cd JOIN articles_commandes acm ON cd.id_commande=acm.id_commande\n" +
                    "	                )\n" +
                    "	            )R JOIN article art ON R.id_article = art.id_article \n" +
                    "	        )\n" +
                    "	        where date_commande = ? AND type_repas_commande = 'dejeuner'\n" +
                    "	    )KK ON RR.designation_article = kk.designation_article\n" +
                    "	) TT \n" +
                    "	FULL OUTER JOIN \n" +
                    "	(\n" +
                    "	    SELECT designation_article , date_commande , type_repas_commande as diner , quantite_entree FROM \n" +
                    "	        (\n" +
                    "	            (\n" +
                    "	                SELECT date_commande , type_repas_commande , quantite_entree , id_article FROM \n" +
                    "	                (\n" +
                    "	                    commande cd JOIN articles_commandes acm ON cd.id_commande=acm.id_commande\n" +
                    "	                )\n" +
                    "	            )R JOIN article art ON R.id_article = art.id_article \n" +
                    "	        )\n" +
                    "	        where date_commande = ? AND type_repas_commande = 'diner'\n" +
                    "	)YY \n" +
                    "	ON \n" +
                    "	TT.designation_article = YY.designation_article\n" +
                    ")J2\n" +
                    "ON\n" +
                    "J1.designation_article = J2.designation_article";
            pst1=conn.prepareStatement(sql11);
            pst1.setString(1, dateRepas);
            pst1.setString(2, dateRepas);
            pst1.setString(3, dateRepas);
            pst1.setString(4, dateRepas);
            pst1.setString(5, dateRepas);
            pst1.setString(6, dateRepas);
            pst1.setString(7, dateRepas);
            pst1.setString(8, dateRepas);
            pst1.setString(9, dateRepas);
            rs1=pst1.executeQuery();
            
          myDocument.add(new Paragraph("Liste articles entrés / Sortie dans cette journée : ",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD )));
          myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n"));
          table4.addCell(new PdfPCell(new Paragraph("ARTICLE",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("Unité_mesure",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("entrée_petit_dejeuner",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("entrée_dejeuner",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("entrée_diner",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("total_entré",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("sortie_petit_dejeuner",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("sortie_dejeuner",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("sortie_diner",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          table4.addCell(new PdfPCell(new Paragraph("total_sortie",FontFactory.getFont(FontFactory.TIMES_ROMAN,9,Font.BOLD))));
          while(rs1.next()){
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(1),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(2),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(3),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(4),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(5),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(6),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(7),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(8),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(9),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
           table4.addCell(new PdfPCell(new Paragraph(rs1.getString(10),FontFactory.getFont(FontFactory.TIMES_ROMAN,8,Font.PLAIN))));
          }
           myDocument.add(table4);
           myDocument.add(new Paragraph("--------------------------------------------------------------------------------------------\n\n"));
           
           
           myDocument.close();  
           JOptionPane.showMessageDialog(null,"Le Rapport a été bien généré");
            
     }
        catch(Exception e){
            e.printStackTrace();
         
         
     }
     finally {
            
            try{
                rs1.close();
                rs2.close();
                rs3.close();
                pst1.close();
                pst2.close();
                pst3.close();
            } catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
         
            }
    }
   }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarnetJourneeMagasinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarnetJourneeMagasinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarnetJourneeMagasinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarnetJourneeMagasinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarnetJourneeMagasinier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
