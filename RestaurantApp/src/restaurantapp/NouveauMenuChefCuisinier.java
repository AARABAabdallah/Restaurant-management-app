/*
Scénario !!!
le chef cuisinier renseigne les champs, et on ne prend en considération que ceux qui ne sont pas vide ,
pour tout champ qui n'est pas vide on cherche son id_plat correspondant
par  le biais de ce code :
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
si il n'a pas d' id_plat correspondant (count = 0 ) !
    on ajout ce nom_plat dans l'ArrayList "noms_non_inscrits", 
sinon on génére une requette sql = "Insert into composition values ( 1 , ? )" avec ? = id_plat correspondant,
par après on met cette requette dans une pst voila le code :
                        String sql2="Insert into composition values ( 1 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
avec querys est ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6) 
c là où  on va regrouper la liste des pst à executer ! 
cela correspont à la liste des champs ayant un id_plat correspondant valide !
Après cela on donne le choix au chef_cuisinier s'il veut sauvegarder juste les noms qui sont valides ou 
annuler toute l'operation et renseigner de  nouveau les noms ! voir le code :)
*/

package restaurantapp;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author aarab
 */
public class NouveauMenuChefCuisinier extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    /**
     * Creates new form Test6
     */

    public NouveauMenuChefCuisinier() {
        initComponents();
        Toolkit toolkit=getToolkit();
        Dimension size=toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        conn= db.java_db();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel5 = new javax.swing.JLabel();
        txt_pd116 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        txt_pd117 = new javax.swing.JTextField();
        txt_pd118 = new javax.swing.JTextField();
        txt_pd6 = new javax.swing.JTextField();
        txt_pd120 = new javax.swing.JTextField();
        txt_pd5 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_pd1 = new javax.swing.JTextField();
        txt_pd119 = new javax.swing.JTextField();
        txt_pd114 = new javax.swing.JTextField();
        txt_pd2 = new javax.swing.JTextField();
        txt_pd4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_pd113 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txt_pd3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_pd115 = new javax.swing.JTextField();
        txt_pd8 = new javax.swing.JTextField();
        txt_pd7 = new javax.swing.JTextField();
        txt_pd9 = new javax.swing.JTextField();
        txt_pd11 = new javax.swing.JTextField();
        txt_pd12 = new javax.swing.JTextField();
        txt_pd10 = new javax.swing.JTextField();
        txt_pd121 = new javax.swing.JTextField();
        txt_pd122 = new javax.swing.JTextField();
        txt_pd123 = new javax.swing.JTextField();
        txt_pd124 = new javax.swing.JTextField();
        txt_pd125 = new javax.swing.JTextField();
        txt_pd126 = new javax.swing.JTextField();
        txt_pd127 = new javax.swing.JTextField();
        txt_pd128 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        txt_pd43 = new javax.swing.JTextField();
        txt_pd44 = new javax.swing.JTextField();
        txt_pd45 = new javax.swing.JTextField();
        txt_pd46 = new javax.swing.JTextField();
        txt_pd47 = new javax.swing.JTextField();
        txt_pd48 = new javax.swing.JTextField();
        txt_pd49 = new javax.swing.JTextField();
        txt_pd50 = new javax.swing.JTextField();
        txt_pd53 = new javax.swing.JTextField();
        txt_pd54 = new javax.swing.JTextField();
        txt_pd55 = new javax.swing.JTextField();
        txt_pd56 = new javax.swing.JTextField();
        txt_pd57 = new javax.swing.JTextField();
        txt_pd58 = new javax.swing.JTextField();
        txt_pd59 = new javax.swing.JTextField();
        txt_pd60 = new javax.swing.JTextField();
        txt_pd63 = new javax.swing.JTextField();
        txt_pd64 = new javax.swing.JTextField();
        txt_pd65 = new javax.swing.JTextField();
        txt_pd66 = new javax.swing.JTextField();
        txt_pd67 = new javax.swing.JTextField();
        txt_pd68 = new javax.swing.JTextField();
        txt_pd69 = new javax.swing.JTextField();
        txt_pd70 = new javax.swing.JTextField();
        txt_pd73 = new javax.swing.JTextField();
        txt_pd74 = new javax.swing.JTextField();
        txt_pd75 = new javax.swing.JTextField();
        txt_pd76 = new javax.swing.JTextField();
        txt_pd77 = new javax.swing.JTextField();
        txt_pd78 = new javax.swing.JTextField();
        txt_pd79 = new javax.swing.JTextField();
        txt_pd80 = new javax.swing.JTextField();
        txt_pd83 = new javax.swing.JTextField();
        txt_pd84 = new javax.swing.JTextField();
        txt_pd85 = new javax.swing.JTextField();
        txt_pd86 = new javax.swing.JTextField();
        txt_pd87 = new javax.swing.JTextField();
        txt_pd88 = new javax.swing.JTextField();
        txt_pd89 = new javax.swing.JTextField();
        txt_pd90 = new javax.swing.JTextField();
        txt_pd93 = new javax.swing.JTextField();
        txt_pd94 = new javax.swing.JTextField();
        txt_pd95 = new javax.swing.JTextField();
        txt_pd96 = new javax.swing.JTextField();
        txt_pd97 = new javax.swing.JTextField();
        txt_pd98 = new javax.swing.JTextField();
        txt_pd99 = new javax.swing.JTextField();
        txt_pd100 = new javax.swing.JTextField();
        txt_pd103 = new javax.swing.JTextField();
        txt_pd104 = new javax.swing.JTextField();
        txt_pd105 = new javax.swing.JTextField();
        txt_pd106 = new javax.swing.JTextField();
        txt_pd107 = new javax.swing.JTextField();
        txt_pd108 = new javax.swing.JTextField();
        txt_pd109 = new javax.swing.JTextField();
        txt_pd110 = new javax.swing.JTextField();
        txt_pd51 = new javax.swing.JTextField();
        txt_pd52 = new javax.swing.JTextField();
        txt_pd62 = new javax.swing.JTextField();
        txt_pd61 = new javax.swing.JTextField();
        txt_pd71 = new javax.swing.JTextField();
        txt_pd72 = new javax.swing.JTextField();
        txt_pd82 = new javax.swing.JTextField();
        txt_pd81 = new javax.swing.JTextField();
        txt_pd92 = new javax.swing.JTextField();
        txt_pd91 = new javax.swing.JTextField();
        txt_pd101 = new javax.swing.JTextField();
        txt_pd102 = new javax.swing.JTextField();
        txt_pd111 = new javax.swing.JTextField();
        txt_pd112 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        txt_pd129 = new javax.swing.JTextField();
        txt_pd130 = new javax.swing.JTextField();
        txt_pd131 = new javax.swing.JTextField();
        txt_pd132 = new javax.swing.JTextField();
        txt_pd133 = new javax.swing.JTextField();
        txt_pd134 = new javax.swing.JTextField();
        txt_pd135 = new javax.swing.JTextField();
        txt_pd136 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        txt_pd137 = new javax.swing.JTextField();
        txt_pd138 = new javax.swing.JTextField();
        txt_pd139 = new javax.swing.JTextField();
        txt_pd140 = new javax.swing.JTextField();
        txt_pd141 = new javax.swing.JTextField();
        txt_pd142 = new javax.swing.JTextField();
        txt_pd143 = new javax.swing.JTextField();
        txt_pd144 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        txt_pd145 = new javax.swing.JTextField();
        txt_pd146 = new javax.swing.JTextField();
        txt_pd147 = new javax.swing.JTextField();
        txt_pd148 = new javax.swing.JTextField();
        txt_pd149 = new javax.swing.JTextField();
        txt_pd150 = new javax.swing.JTextField();
        txt_pd151 = new javax.swing.JTextField();
        txt_pd152 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        txt_pd153 = new javax.swing.JTextField();
        txt_pd154 = new javax.swing.JTextField();
        txt_pd155 = new javax.swing.JTextField();
        txt_pd156 = new javax.swing.JTextField();
        txt_pd157 = new javax.swing.JTextField();
        txt_pd158 = new javax.swing.JTextField();
        txt_pd159 = new javax.swing.JTextField();
        txt_pd160 = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        txt_pd161 = new javax.swing.JTextField();
        txt_pd162 = new javax.swing.JTextField();
        txt_pd163 = new javax.swing.JTextField();
        txt_pd164 = new javax.swing.JTextField();
        txt_pd165 = new javax.swing.JTextField();
        txt_pd166 = new javax.swing.JTextField();
        txt_pd167 = new javax.swing.JTextField();
        txt_pd168 = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        txt_pd13 = new javax.swing.JTextField();
        txt_pd14 = new javax.swing.JTextField();
        txt_pd15 = new javax.swing.JTextField();
        txt_pd16 = new javax.swing.JTextField();
        txt_pd17 = new javax.swing.JTextField();
        txt_pd18 = new javax.swing.JTextField();
        jButton19 = new javax.swing.JButton();
        txt_pd19 = new javax.swing.JTextField();
        txt_pd20 = new javax.swing.JTextField();
        txt_pd21 = new javax.swing.JTextField();
        txt_pd22 = new javax.swing.JTextField();
        txt_pd23 = new javax.swing.JTextField();
        txt_pd24 = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        txt_pd25 = new javax.swing.JTextField();
        txt_pd26 = new javax.swing.JTextField();
        txt_pd27 = new javax.swing.JTextField();
        txt_pd28 = new javax.swing.JTextField();
        txt_pd29 = new javax.swing.JTextField();
        txt_pd30 = new javax.swing.JTextField();
        jButton21 = new javax.swing.JButton();
        txt_pd31 = new javax.swing.JTextField();
        txt_pd32 = new javax.swing.JTextField();
        txt_pd33 = new javax.swing.JTextField();
        txt_pd34 = new javax.swing.JTextField();
        txt_pd35 = new javax.swing.JTextField();
        txt_pd36 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        txt_pd37 = new javax.swing.JTextField();
        txt_pd38 = new javax.swing.JTextField();
        txt_pd39 = new javax.swing.JTextField();
        txt_pd40 = new javax.swing.JTextField();
        txt_pd41 = new javax.swing.JTextField();
        txt_pd42 = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jInternalFrame1.setVisible(true);

        jLabel5.setText("Diner");

        jButton3.setText("Valider");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Lundi");

        jLabel4.setText("Petit déjeuner");

        jLabel1.setText("Jour :");

        jLabel2.setText("type_repas :");

        jButton4.setText("Valider");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Valider");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Valider");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Valider");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Valider");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Valider");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Valider");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Valider");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Valider");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Valider");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Valider");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Valider");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Valider");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Valider");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel9.setText("Déjeuner");

        jButton18.setText("Valider");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Valider");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Valider");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setText("Valider");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setText("Valider");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Valider");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jLabel10.setText("Mardi");

        jLabel11.setText("Mercredi");

        jLabel12.setText("Jeudi");

        jLabel13.setText("Vendredi");

        jLabel14.setText("Samedi");

        jLabel15.setText("Dimanche");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                                .addGap(103, 103, 103)
                                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txt_pd114, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_pd116, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txt_pd5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(txt_pd3, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                                            .addComponent(txt_pd1)))
                                                    .addGap(24, 24, 24)
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txt_pd6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txt_pd43)
                                                        .addComponent(txt_pd45)
                                                        .addComponent(txt_pd47)
                                                        .addComponent(txt_pd49, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                                        .addComponent(txt_pd51))
                                                    .addGap(26, 26, 26)
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txt_pd50, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                        .addComponent(txt_pd44, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                        .addComponent(txt_pd46, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                        .addComponent(txt_pd48, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                                        .addComponent(txt_pd52)))))
                                        .addGap(47, 47, 47)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addGap(51, 51, 51)
                                                .addComponent(jButton4))
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txt_pd121)
                                                    .addComponent(txt_pd123)
                                                    .addComponent(txt_pd125)
                                                    .addComponent(txt_pd127, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(26, 26, 26)
                                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txt_pd128, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_pd122, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_pd124, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txt_pd126, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addComponent(txt_pd61, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(txt_pd62, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txt_pd11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(txt_pd9)
                                                            .addComponent(txt_pd7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGap(24, 24, 24)
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(txt_pd12, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd10, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txt_pd53)
                                                        .addComponent(txt_pd55)
                                                        .addComponent(txt_pd57)
                                                        .addComponent(txt_pd59, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(26, 26, 26)
                                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(txt_pd60, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd54, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd56, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txt_pd58, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(jButton3))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_pd113)
                                            .addComponent(txt_pd115)
                                            .addComponent(txt_pd117)
                                            .addComponent(txt_pd119, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_pd118, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_pd120, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(67, 67, 67))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jButton17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton18)
                                .addGap(117, 117, 117)))
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd129)
                                    .addComponent(txt_pd131)
                                    .addComponent(txt_pd133)
                                    .addComponent(txt_pd135, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd134, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(txt_pd136)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd63)
                                    .addComponent(txt_pd65)
                                    .addComponent(txt_pd67)
                                    .addComponent(txt_pd69, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_pd70, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd64, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd66, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd68, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txt_pd132, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(txt_pd130))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd71, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(txt_pd72, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton12)
                                    .addComponent(jButton19)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd17, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_pd15)
                                        .addComponent(txt_pd13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd18, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd14, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(68, 68, 68)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd137)
                                    .addComponent(txt_pd139)
                                    .addComponent(txt_pd141)
                                    .addComponent(txt_pd143, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd142, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(txt_pd144)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd73)
                                    .addComponent(txt_pd75)
                                    .addComponent(txt_pd77)
                                    .addComponent(txt_pd79, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_pd80, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd74, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd76, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd78, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txt_pd140, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(txt_pd138))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd81, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(txt_pd82, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton13)
                                    .addComponent(jButton20)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd23, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_pd21)
                                        .addComponent(txt_pd19, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd24, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd20, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd22, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(77, 77, 77)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_pd145)
                                            .addComponent(txt_pd147)
                                            .addComponent(txt_pd149)
                                            .addComponent(txt_pd151, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_pd150, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                            .addComponent(txt_pd152)))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_pd83)
                                            .addComponent(txt_pd85)
                                            .addComponent(txt_pd87)
                                            .addComponent(txt_pd89, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_pd90, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_pd84, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_pd86, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_pd88, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txt_pd148, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                                .addGap(103, 103, 103)
                                                .addComponent(txt_pd146))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                                                .addComponent(txt_pd91, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(txt_pd92, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton14)
                                            .addComponent(jButton21))))
                                .addGap(93, 93, 93))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd29, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_pd27)
                                        .addComponent(txt_pd25, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd30, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd26, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd28, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(81, 81, 81)))
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd153)
                                    .addComponent(txt_pd155)
                                    .addComponent(txt_pd157)
                                    .addComponent(txt_pd159, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd158, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(txt_pd160)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd93)
                                    .addComponent(txt_pd95)
                                    .addComponent(txt_pd97)
                                    .addComponent(txt_pd99, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_pd100, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd94, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd96, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd98, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txt_pd156, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(txt_pd154))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd101, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(txt_pd102, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton15)
                                    .addComponent(jButton22)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd35, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_pd33)
                                        .addComponent(txt_pd31, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(24, 24, 24)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_pd36, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd32, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd34, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd161)
                                    .addComponent(txt_pd163)
                                    .addComponent(txt_pd165)
                                    .addComponent(txt_pd167, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_pd166, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(txt_pd168)))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txt_pd164, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(txt_pd162))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd111, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(txt_pd112, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton23)
                                    .addComponent(jButton16)))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_pd41, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_pd39)
                                            .addComponent(txt_pd37, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(24, 24, 24)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_pd42, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd38, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd40, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_pd103)
                                        .addComponent(txt_pd105)
                                        .addComponent(txt_pd107)
                                        .addComponent(txt_pd109, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(26, 26, 26)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txt_pd110, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd104, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd106, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd108, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(96, 96, 96))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184)
                        .addComponent(jLabel10)
                        .addGap(204, 204, 204)
                        .addComponent(jLabel11)
                        .addGap(209, 209, 209)
                        .addComponent(jLabel12)
                        .addGap(222, 222, 222)
                        .addComponent(jLabel13)
                        .addGap(215, 215, 215)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addGap(152, 152, 152))))
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jButton5)
                .addGap(158, 158, 158)
                .addComponent(jButton6)
                .addGap(185, 185, 185)
                .addComponent(jButton7)
                .addGap(187, 187, 187)
                .addComponent(jButton8)
                .addGap(180, 180, 180)
                .addComponent(jButton9)
                .addGap(187, 187, 187)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addGap(148, 148, 148))
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(657, 657, 657))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel1))
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(txt_pd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_pd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_pd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_pd9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_pd11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_pd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_pd6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(7, 7, 7)
                                .addComponent(jButton17))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_pd15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_pd17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_pd10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_pd12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                        .addComponent(txt_pd14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_pd16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_pd18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton19)
                                    .addComponent(jButton18)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addComponent(jButton20))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addComponent(jButton21))))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(jButton22))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(jButton23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd67, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd69, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd77, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd79, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd89, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd90, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd93, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd94, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd95, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd96, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd97, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd98, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd99, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd108, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd110, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_pd59, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_pd51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pd52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd102, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_pd111, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_pd112, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton6)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton9)
                            .addComponent(jButton10)
                            .addComponent(jButton11))
                        .addGap(18, 18, 18)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd113, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(txt_pd114, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd115, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd116, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd117, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd118, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd119, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd120, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton3))
                            .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd121, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd122, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd123, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd124, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd125, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd126, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd127, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd128, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton4))
                                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd129, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd130, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd131, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd132, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd133, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd134, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_pd135, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_pd136, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton12)))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd137, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd138, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd139, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd140, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd141, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd142, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd143, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd144, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton13))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd153, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd154, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd155, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd156, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd157, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd158, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd159, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd160, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton15))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd161, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd162, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd163, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd164, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd165, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd166, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd167, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd168, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton16))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd145, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd146, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd147, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd148, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd149, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd150, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_pd151, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_pd152, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton14))))
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_pd61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_pd62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jScrollPane1.setViewportView(jInternalFrame1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1902, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd1;
                        break;
                    case 1 :
                        jtf = txt_pd2;
                        break;
                    case 2 :
                        jtf = txt_pd3;
                        break;
                    case 3 :
                        jtf = txt_pd4;
                        break;
                    case 4 :
                        jtf = txt_pd5;
                        break;
                    default :
                        jtf = txt_pd6;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 1 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd7;
                        break;
                    case 1 :
                        jtf = txt_pd8;
                        break;
                    case 2 :
                        jtf = txt_pd9;
                        break;
                    case 3 :
                        jtf = txt_pd10;
                        break;
                    case 4 :
                        jtf = txt_pd11;
                        break;
                    default :
                        jtf = txt_pd12;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 2 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd13;
                        break;
                    case 1 :
                        jtf = txt_pd14;
                        break;
                    case 2 :
                        jtf = txt_pd15;
                        break;
                    case 3 :
                        jtf = txt_pd16;
                        break;
                    case 4 :
                        jtf = txt_pd17;
                        break;
                    default :
                        jtf = txt_pd18;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 3 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd19;
                        break;
                    case 1 :
                        jtf = txt_pd20;
                        break;
                    case 2 :
                        jtf = txt_pd21;
                        break;
                    case 3 :
                        jtf = txt_pd22;
                        break;
                    case 4 :
                        jtf = txt_pd23;
                        break;
                    default :
                        jtf = txt_pd24;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 4 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd25;
                        break;
                    case 1 :
                        jtf = txt_pd26;
                        break;
                    case 2 :
                        jtf = txt_pd27;
                        break;
                    case 3 :
                        jtf = txt_pd28;
                        break;
                    case 4 :
                        jtf = txt_pd29;
                        break;
                    default :
                        jtf = txt_pd30;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 5 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd31;
                        break;
                    case 1 :
                        jtf = txt_pd32;
                        break;
                    case 2 :
                        jtf = txt_pd33;
                        break;
                    case 3 :
                        jtf = txt_pd34;
                        break;
                    case 4 :
                        jtf = txt_pd35;
                        break;
                    default :
                        jtf = txt_pd36;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 6 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd37;
                        break;
                    case 1 :
                        jtf = txt_pd38;
                        break;
                    case 2 :
                        jtf = txt_pd39;
                        break;
                    case 3 :
                        jtf = txt_pd40;
                        break;
                    case 4 :
                        jtf = txt_pd41;
                        break;
                    default :
                        jtf = txt_pd42;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 7 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd43;
                        break;
                    case 1 :
                        jtf = txt_pd44;
                        break;
                    case 2 :
                        jtf = txt_pd45;
                        break;
                    case 3 :
                        jtf = txt_pd46;
                        break;
                    case 4 :
                        jtf = txt_pd47;
                        break;
                    case 5 :
                        jtf = txt_pd48;
                        break;
                    case 6 :
                        jtf = txt_pd49;
                        break;
                    case 7 :
                        jtf = txt_pd50;
                        break;
                    case 8 :
                        jtf = txt_pd51;
                        break;
                    default :
                        jtf = txt_pd52;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 8 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd53;
                        break;
                    case 1 :
                        jtf = txt_pd54;
                        break;
                    case 2 :
                        jtf = txt_pd55;
                        break;
                    case 3 :
                        jtf = txt_pd56;
                        break;
                    case 4 :
                        jtf = txt_pd57;
                        break;
                    case 5 :
                        jtf = txt_pd58;
                        break;
                    case 6 :
                        jtf = txt_pd59;
                        break;
                    case 7 :
                        jtf = txt_pd60;
                        break;
                    case 8 :
                        jtf = txt_pd61;
                        break;
                    default :
                        jtf = txt_pd62;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 9 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd63;
                        break;
                    case 1 :
                        jtf = txt_pd64;
                        break;
                    case 2 :
                        jtf = txt_pd65;
                        break;
                    case 3 :
                        jtf = txt_pd66;
                        break;
                    case 4 :
                        jtf = txt_pd67;
                        break;
                    case 5 :
                        jtf = txt_pd68;
                        break;
                    case 6 :
                        jtf = txt_pd69;
                        break;
                    case 7 :
                        jtf = txt_pd70;
                        break;
                    case 8 :
                        jtf = txt_pd71;
                        break;
                    default :
                        jtf = txt_pd72;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 10 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd73;
                        break;
                    case 1 :
                        jtf = txt_pd74;
                        break;
                    case 2 :
                        jtf = txt_pd75;
                        break;
                    case 3 :
                        jtf = txt_pd76;
                        break;
                    case 4 :
                        jtf = txt_pd77;
                        break;
                    case 5 :
                        jtf = txt_pd78;
                        break;
                    case 6 :
                        jtf = txt_pd79;
                        break;
                    case 7 :
                        jtf = txt_pd80;
                        break;
                    case 8 :
                        jtf = txt_pd81;
                        break;
                    default :
                        jtf = txt_pd82;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 11 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd83;
                        break;
                    case 1 :
                        jtf = txt_pd84;
                        break;
                    case 2 :
                        jtf = txt_pd85;
                        break;
                    case 3 :
                        jtf = txt_pd86;
                        break;
                    case 4 :
                        jtf = txt_pd87;
                        break;
                    case 5 :
                        jtf = txt_pd88;
                        break;
                    case 6 :
                        jtf = txt_pd89;
                        break;
                    case 7 :
                        jtf = txt_pd90;
                        break;
                    case 8 :
                        jtf = txt_pd91;
                        break;
                    default :
                        jtf = txt_pd92;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 12 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd93;
                        break;
                    case 1 :
                        jtf = txt_pd94;
                        break;
                    case 2 :
                        jtf = txt_pd95;
                        break;
                    case 3 :
                        jtf = txt_pd96;
                        break;
                    case 4 :
                        jtf = txt_pd97;
                        break;
                    case 5 :
                        jtf = txt_pd98;
                        break;
                    case 6 :
                        jtf = txt_pd99;
                        break;
                    case 7 :
                        jtf = txt_pd100;
                        break;
                    case 8 :
                        jtf = txt_pd101;
                        break;
                    default :
                        jtf = txt_pd102;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 13 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<10; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd103;
                        break;
                    case 1 :
                        jtf = txt_pd104;
                        break;
                    case 2 :
                        jtf = txt_pd105;
                        break;
                    case 3 :
                        jtf = txt_pd106;
                        break;
                    case 4 :
                        jtf = txt_pd107;
                        break;
                    case 5 :
                        jtf = txt_pd108;
                        break;
                    case 6 :
                        jtf = txt_pd109;
                        break;
                    case 7 :
                        jtf = txt_pd110;
                        break;
                    case 8 :
                        jtf = txt_pd111;
                        break;
                    default :
                        jtf = txt_pd112;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 14 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd113;
                        break;
                    case 1 :
                        jtf = txt_pd114;
                        break;
                    case 2 :
                        jtf = txt_pd115;
                        break;
                    case 3 :
                        jtf = txt_pd116;
                        break;
                    case 4 :
                        jtf = txt_pd117;
                        break;
                    case 5 :
                        jtf = txt_pd118;
                        break;
                    case 6 :
                        jtf = txt_pd119;
                        break;
                    default :
                        jtf = txt_pd120;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 15 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<6; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd121;
                        break;
                    case 1 :
                        jtf = txt_pd122;
                        break;
                    case 2 :
                        jtf = txt_pd123;
                        break;
                    case 3 :
                        jtf = txt_pd124;
                        break;
                    case 4 :
                        jtf = txt_pd125;
                        break;
                    case 5 :
                        jtf = txt_pd126;
                        break;
                    case 6 :
                        jtf = txt_pd127;
                        break;
                    default :
                        jtf = txt_pd128;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 16 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<8; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd129;
                        break;
                    case 1 :
                        jtf = txt_pd130;
                        break;
                    case 2 :
                        jtf = txt_pd131;
                        break;
                    case 3 :
                        jtf = txt_pd132;
                        break;
                    case 4 :
                        jtf = txt_pd133;
                        break;
                    case 5 :
                        jtf = txt_pd134;
                        break;
                    case 6 :
                        jtf = txt_pd135;
                        break;
                    default :
                        jtf = txt_pd136;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 17 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<8; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd137;
                        break;
                    case 1 :
                        jtf = txt_pd138;
                        break;
                    case 2 :
                        jtf = txt_pd139;
                        break;
                    case 3 :
                        jtf = txt_pd140;
                        break;
                    case 4 :
                        jtf = txt_pd141;
                        break;
                    case 5 :
                        jtf = txt_pd142;
                        break;
                    case 6 :
                        jtf = txt_pd143;
                        break;
                    default :
                        jtf = txt_pd144;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 18 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<8; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd145;
                        break;
                    case 1 :
                        jtf = txt_pd146;
                        break;
                    case 2 :
                        jtf = txt_pd147;
                        break;
                    case 3 :
                        jtf = txt_pd148;
                        break;
                    case 4 :
                        jtf = txt_pd149;
                        break;
                    case 5 :
                        jtf = txt_pd150;
                        break;
                    case 6 :
                        jtf = txt_pd151;
                        break;
                    default :
                        jtf = txt_pd152;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 19 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<8; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd153;
                        break;
                    case 1 :
                        jtf = txt_pd154;
                        break;
                    case 2 :
                        jtf = txt_pd155;
                        break;
                    case 3 :
                        jtf = txt_pd156;
                        break;
                    case 4 :
                        jtf = txt_pd157;
                        break;
                    case 5 :
                        jtf = txt_pd158;
                        break;
                    case 6 :
                        jtf = txt_pd159;
                        break;
                    default :
                        jtf = txt_pd160;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 20 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        try{
            ArrayList<String> noms_non_inscrits = new ArrayList<String>(6);  // liste des plats qui ne sont pas encores inscrits !
            ArrayList<PreparedStatement> querys = new ArrayList<PreparedStatement>(6); // liste de requettes à éxécuté!
            JTextField jtf=null;
            for(int i=0 ; i<8; i++){ // Boucle pour ne pas répéter le code !
                switch(i){
                    case 0 :
                        jtf = txt_pd161;
                        break;
                    case 1 :
                        jtf = txt_pd162;
                        break;
                    case 2 :
                        jtf = txt_pd163;
                        break;
                    case 3 :
                        jtf = txt_pd164;
                        break;
                    case 4 :
                        jtf = txt_pd165;
                        break;
                    case 5 :
                        jtf = txt_pd166;
                        break;
                    case 6 :
                        jtf = txt_pd167;
                        break;
                    default :
                        jtf = txt_pd168;
                        break;
                }
                if(!jtf.getText().equals("") ){
                    String sql = "select * from plat where nom_plat = ? ";
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, jtf.getText());
                    rs=pst.executeQuery();
                    int count = 0;
                    int id_plat = 0;
                    while(rs.next()){
                        id_plat = rs.getInt("id_plat");
                        count++ ;
                    }
                    if(count !=0){
                        String sql2="Insert into composition values ( 21 , ? )";
                        pst=conn.prepareStatement(sql2);
                        pst.setInt(1, id_plat);
                        querys.add(pst);
                    }
                    else{
                        noms_non_inscrits.add( jtf.getText() );
                    }
                }
            }
            if(noms_non_inscrits.isEmpty()){  // Si tous les champs renseignés sont valides !!!
                for(PreparedStatement pp : querys){
                    try{
                        pp.executeQuery();
                    }catch(SQLIntegrityConstraintViolationException e){
                        //JOptionPane.showMessageDialog(null, " Done ! "); // Le chef cuisinier n'a pas besoin de  savoir ce cas !
                    }
                }
                JOptionPane.showMessageDialog(null, " Done ! ");
            }
            else {
                String msg = " ";
                for(String s : noms_non_inscrits){
                    msg = msg + s + " ";
                }
                JOptionPane.showMessageDialog(null, " les plats "+msg+" ne sont pas encores inscrits !");
                ChoixUtilisateurAfficherPlatsPasEncoreInscrits chUtil = new ChoixUtilisateurAfficherPlatsPasEncoreInscrits();
                chUtil.setQuerys(querys);
                chUtil.setVisible(true);
            }
            //String sql1 = " Select nom_plat from plat where id =  ";
        }catch(Exception e){
            e.printStackTrace();
        }finally{
            try {
                rs.close();
                pst.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NouveauMenuChefCuisinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NouveauMenuChefCuisinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NouveauMenuChefCuisinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NouveauMenuChefCuisinier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NouveauMenuChefCuisinier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_pd1;
    private javax.swing.JTextField txt_pd10;
    private javax.swing.JTextField txt_pd100;
    private javax.swing.JTextField txt_pd101;
    private javax.swing.JTextField txt_pd102;
    private javax.swing.JTextField txt_pd103;
    private javax.swing.JTextField txt_pd104;
    private javax.swing.JTextField txt_pd105;
    private javax.swing.JTextField txt_pd106;
    private javax.swing.JTextField txt_pd107;
    private javax.swing.JTextField txt_pd108;
    private javax.swing.JTextField txt_pd109;
    private javax.swing.JTextField txt_pd11;
    private javax.swing.JTextField txt_pd110;
    private javax.swing.JTextField txt_pd111;
    private javax.swing.JTextField txt_pd112;
    private javax.swing.JTextField txt_pd113;
    private javax.swing.JTextField txt_pd114;
    private javax.swing.JTextField txt_pd115;
    private javax.swing.JTextField txt_pd116;
    private javax.swing.JTextField txt_pd117;
    private javax.swing.JTextField txt_pd118;
    private javax.swing.JTextField txt_pd119;
    private javax.swing.JTextField txt_pd12;
    private javax.swing.JTextField txt_pd120;
    private javax.swing.JTextField txt_pd121;
    private javax.swing.JTextField txt_pd122;
    private javax.swing.JTextField txt_pd123;
    private javax.swing.JTextField txt_pd124;
    private javax.swing.JTextField txt_pd125;
    private javax.swing.JTextField txt_pd126;
    private javax.swing.JTextField txt_pd127;
    private javax.swing.JTextField txt_pd128;
    private javax.swing.JTextField txt_pd129;
    private javax.swing.JTextField txt_pd13;
    private javax.swing.JTextField txt_pd130;
    private javax.swing.JTextField txt_pd131;
    private javax.swing.JTextField txt_pd132;
    private javax.swing.JTextField txt_pd133;
    private javax.swing.JTextField txt_pd134;
    private javax.swing.JTextField txt_pd135;
    private javax.swing.JTextField txt_pd136;
    private javax.swing.JTextField txt_pd137;
    private javax.swing.JTextField txt_pd138;
    private javax.swing.JTextField txt_pd139;
    private javax.swing.JTextField txt_pd14;
    private javax.swing.JTextField txt_pd140;
    private javax.swing.JTextField txt_pd141;
    private javax.swing.JTextField txt_pd142;
    private javax.swing.JTextField txt_pd143;
    private javax.swing.JTextField txt_pd144;
    private javax.swing.JTextField txt_pd145;
    private javax.swing.JTextField txt_pd146;
    private javax.swing.JTextField txt_pd147;
    private javax.swing.JTextField txt_pd148;
    private javax.swing.JTextField txt_pd149;
    private javax.swing.JTextField txt_pd15;
    private javax.swing.JTextField txt_pd150;
    private javax.swing.JTextField txt_pd151;
    private javax.swing.JTextField txt_pd152;
    private javax.swing.JTextField txt_pd153;
    private javax.swing.JTextField txt_pd154;
    private javax.swing.JTextField txt_pd155;
    private javax.swing.JTextField txt_pd156;
    private javax.swing.JTextField txt_pd157;
    private javax.swing.JTextField txt_pd158;
    private javax.swing.JTextField txt_pd159;
    private javax.swing.JTextField txt_pd16;
    private javax.swing.JTextField txt_pd160;
    private javax.swing.JTextField txt_pd161;
    private javax.swing.JTextField txt_pd162;
    private javax.swing.JTextField txt_pd163;
    private javax.swing.JTextField txt_pd164;
    private javax.swing.JTextField txt_pd165;
    private javax.swing.JTextField txt_pd166;
    private javax.swing.JTextField txt_pd167;
    private javax.swing.JTextField txt_pd168;
    private javax.swing.JTextField txt_pd17;
    private javax.swing.JTextField txt_pd18;
    private javax.swing.JTextField txt_pd19;
    private javax.swing.JTextField txt_pd2;
    private javax.swing.JTextField txt_pd20;
    private javax.swing.JTextField txt_pd21;
    private javax.swing.JTextField txt_pd22;
    private javax.swing.JTextField txt_pd23;
    private javax.swing.JTextField txt_pd24;
    private javax.swing.JTextField txt_pd25;
    private javax.swing.JTextField txt_pd26;
    private javax.swing.JTextField txt_pd27;
    private javax.swing.JTextField txt_pd28;
    private javax.swing.JTextField txt_pd29;
    private javax.swing.JTextField txt_pd3;
    private javax.swing.JTextField txt_pd30;
    private javax.swing.JTextField txt_pd31;
    private javax.swing.JTextField txt_pd32;
    private javax.swing.JTextField txt_pd33;
    private javax.swing.JTextField txt_pd34;
    private javax.swing.JTextField txt_pd35;
    private javax.swing.JTextField txt_pd36;
    private javax.swing.JTextField txt_pd37;
    private javax.swing.JTextField txt_pd38;
    private javax.swing.JTextField txt_pd39;
    private javax.swing.JTextField txt_pd4;
    private javax.swing.JTextField txt_pd40;
    private javax.swing.JTextField txt_pd41;
    private javax.swing.JTextField txt_pd42;
    private javax.swing.JTextField txt_pd43;
    private javax.swing.JTextField txt_pd44;
    private javax.swing.JTextField txt_pd45;
    private javax.swing.JTextField txt_pd46;
    private javax.swing.JTextField txt_pd47;
    private javax.swing.JTextField txt_pd48;
    private javax.swing.JTextField txt_pd49;
    private javax.swing.JTextField txt_pd5;
    private javax.swing.JTextField txt_pd50;
    private javax.swing.JTextField txt_pd51;
    private javax.swing.JTextField txt_pd52;
    private javax.swing.JTextField txt_pd53;
    private javax.swing.JTextField txt_pd54;
    private javax.swing.JTextField txt_pd55;
    private javax.swing.JTextField txt_pd56;
    private javax.swing.JTextField txt_pd57;
    private javax.swing.JTextField txt_pd58;
    private javax.swing.JTextField txt_pd59;
    private javax.swing.JTextField txt_pd6;
    private javax.swing.JTextField txt_pd60;
    private javax.swing.JTextField txt_pd61;
    private javax.swing.JTextField txt_pd62;
    private javax.swing.JTextField txt_pd63;
    private javax.swing.JTextField txt_pd64;
    private javax.swing.JTextField txt_pd65;
    private javax.swing.JTextField txt_pd66;
    private javax.swing.JTextField txt_pd67;
    private javax.swing.JTextField txt_pd68;
    private javax.swing.JTextField txt_pd69;
    private javax.swing.JTextField txt_pd7;
    private javax.swing.JTextField txt_pd70;
    private javax.swing.JTextField txt_pd71;
    private javax.swing.JTextField txt_pd72;
    private javax.swing.JTextField txt_pd73;
    private javax.swing.JTextField txt_pd74;
    private javax.swing.JTextField txt_pd75;
    private javax.swing.JTextField txt_pd76;
    private javax.swing.JTextField txt_pd77;
    private javax.swing.JTextField txt_pd78;
    private javax.swing.JTextField txt_pd79;
    private javax.swing.JTextField txt_pd8;
    private javax.swing.JTextField txt_pd80;
    private javax.swing.JTextField txt_pd81;
    private javax.swing.JTextField txt_pd82;
    private javax.swing.JTextField txt_pd83;
    private javax.swing.JTextField txt_pd84;
    private javax.swing.JTextField txt_pd85;
    private javax.swing.JTextField txt_pd86;
    private javax.swing.JTextField txt_pd87;
    private javax.swing.JTextField txt_pd88;
    private javax.swing.JTextField txt_pd89;
    private javax.swing.JTextField txt_pd9;
    private javax.swing.JTextField txt_pd90;
    private javax.swing.JTextField txt_pd91;
    private javax.swing.JTextField txt_pd92;
    private javax.swing.JTextField txt_pd93;
    private javax.swing.JTextField txt_pd94;
    private javax.swing.JTextField txt_pd95;
    private javax.swing.JTextField txt_pd96;
    private javax.swing.JTextField txt_pd97;
    private javax.swing.JTextField txt_pd98;
    private javax.swing.JTextField txt_pd99;
    // End of variables declaration//GEN-END:variables
}
